import com.l2fprod.gui.plaf.skin.*;
import com.sun.java.swing.SwingUtilities2;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import javax.swing.*;
import javax.swing.event.*;
/*
 * ThemeSelectionBean.java
 *
 * Created on May 12, 2005, 3:36 PM
 */

/**
 *
 * @author  cmlee
 */
public class ThemeSelectionBean extends JDialog
        implements ActionListener, ListSelectionListener {
    
    private SkinListModel model = null;
    private int selectedIndex = -1;
    
    private class SkinListModel implements ComboBoxModel {
        private File[] data;
        private File selected;
        
        public SkinListModel(File[] f) {
            data = f;
            selected = (f.length > 0)? f[0]: null;
        }
        
        public void addListDataListener(ListDataListener listDataListener) {
        }
        
        public Object getElementAt(int param) {
            return (data[param]);
        }
        
        public Object getSelectedItem() {
            return (selected);
        }
        
        public int getSize() {
            return (data.length);
        }
        
        public void removeListDataListener(ListDataListener listDataListener) {
        }
        
        public void setSelectedItem(Object obj) {
            if (!(obj instanceof File)) {
                selected = null;
                return;
            }
                        
            selected = (File)obj;
        }
    }
    
    /**
     * Creates new form ThemeSelectionBean 
     */
    public ThemeSelectionBean(JFrame f) {
        super(f, "Skin Selector");
        setModal(true);
        initComponents();
        skinFolder = ".";
        okButton.addActionListener(this);
        cancelButton.addActionListener(this);
        skinsList.addListSelectionListener(this);
    }
    
    public void setVisible(boolean b) {
        
        File folder = new File(skinFolder);
        File[] skins = folder.listFiles(new FileFilter() {
            public boolean accept(File f) {
                return (f.getName().endsWith(".zip"));
            }
        });
        model = new SkinListModel(skins);
        skinsList.setModel(model);

		  pack();
        
        super.setVisible(b);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        skinsList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        jLabel1.setText("Select skins");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jPanel2.setBorder(new javax.swing.border.EtchedBorder());
        okButton.setText("OK");
        jPanel2.add(okButton);

        cancelButton.setText("Cancel");
        jPanel2.add(cancelButton);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        skinsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(skinsList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame f = new JFrame();
                ThemeSelectionBean d = new ThemeSelectionBean(f);
                d.setSkinFolder("/home/cmlee/src/hol/netbeansswing/resources/themepacks");
                d.pack();
                d.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JList skinsList;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Holds value of property skinFolder.
     */
    private String skinFolder;
    
    /**
     * Getter for property skinFolder.
     * @return Value of property skinFolder.
     */
    public String getSkinFolder() {
        
        return this.skinFolder;
    }
    
    /**
     * Setter for property skinFolder.
     * @param skinFolder New value of property skinFolder.
     */
    public void setSkinFolder(String skinFolder) {
        
        this.skinFolder = skinFolder;
    }
    
    public File getSelectedSkin() {
        
        if (selectedIndex == -1)
            return (null);
        
        return ((File)model.getElementAt(selectedIndex));
    }
    
    public void actionPerformed(ActionEvent actionEvent) {
        
        Object obj = actionEvent.getSource();
        
        setVisible(false);
        
        if (obj == cancelButton) {
            selectedIndex = -1;
            return;
        }
        
        try {            
            File f = (File)model.getElementAt(selectedIndex);
            UIManager.removeAuxiliaryLookAndFeel(UIManager.getLookAndFeel());
            Skin skin = SkinLookAndFeel.loadThemePack(f.getAbsolutePath());
            SkinLookAndFeel.setSkin(skin);
            UIManager.setLookAndFeel(new SkinLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        SwingUtilities.updateComponentTreeUI(getParent());
    }

    public void valueChanged(ListSelectionEvent listSelectionEvent) {
        
        selectedIndex = listSelectionEvent.getLastIndex();
    }
    
}
